#!/bin/bash

if [ $# = 0 ]; then
  echo "Usage: $0 [-l] <RPM> [ <RPM> ... ]"
  echo "Shows everything about one or more rpms."
  exit 1
fi

if [ "$1" = '-l' ]; then
  output_format=( -l )
  less_opts=( )
  shift
else  
  divider="------------------------------------------------------------------------------"
  # Note that --list seems to always get output last, regardless of
  # the option order.  So to cope with multiple packages being listed
  # due to having the same name, we have to either put an extra
  # divider at the beginning of the output format, or search for
  # the first line of the -i header in less.  Or both.
  if rpm --help | grep -q -- '--suggests'; then
    extras=(
        --qf "Suggests:\n"     --suggests 
        --qf "\n$divider\n" 
        --qf "Recommends:\n"   --recommends 
        --qf "\n$divider\n" 
        --qf "Enhances:\n"     --enhances 
        --qf "\n$divider\n" 
        --qf "Supplements:\n"  --supplements 
        --qf "\n$divider\n"
    )
    if rpm --help | grep -q -- '--basedon'; then
        extras=(
            "${extras[@]}"
            --qf "Basedon:\n"      --basedon 
            --qf "\n$divider\n" 
        )
    fi
  else
    extras=( )
  fi

  if [ -f /etc/SuSE-release ]; then
      SUSE=( --qf "disturl: %{disturl}\n" )
  else
      SUSE=( )
  fi

  output_format=(
      --qf "$divider\n" 
      -iv 
      "${SUSE[@]}"
      --qf "$divider\n" 
      --qf "Arch: %{ARCH}\n" 
      --qf "$divider\n" 
      --qf "Provides:\n"     --provides 
      --qf "$divider\n" 
      --qf "Requires:\n"     --requires 
      --qf "$divider\n" 
      --qf "Conflicts:\n"    --conflicts
      --qf "$divider\n"
      "${extras[@]}"
      --qf "Scripts:\n"      --scripts --triggers 
      --qf "$divider\n" 
      --qf "Changelog:\n"    --changelog 
      --qf "$divider\n" 
      --qf "Files:\n"        --list
  )
  # Note that the trailing 'g' is only necessary if the first line
  # isn't going to match.
#   less_opts=( '+/^-{78}
# g' )
  less_opts=( '+/^-{78}|^Name[ 	]+:.*
' )
fi

while [ -n "$1" ]; do
  rpm="$1"
  shift

  popt=''
  case "$rpm" in
    *.[rs]pm)
      [ -e "$rpm" ] && popt='p' ;;
    */*)
      [ -e "$rpm" ] && popt='f' ;;
  esac

  # Work on executables in $PATH too
  if [ -z "$popt" ]; then
    if exe=$( which "$rpm" 2>/dev/null ) && ! rpm -q "$rpm" >&/dev/null; then
      popt='f'
      rpm="$exe"
    fi
  fi

  rpm -q$popt "${output_format[@]}" -- "$rpm"
done | less -S "${less_opts[@]}"
